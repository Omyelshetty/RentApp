{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omyel\\\\Desktop\\\\RentApp\\\\client\\\\src\\\\auth\\\\ProtectedRoute.jsx\";\n// src/auth/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  allowedRoles\n}) => {\n  const token = localStorage.getItem('token');\n  if (!token) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 24\n  }, this);\n  try {\n    const decoded = jwtDecode(token);\n    const userRole = decoded.role;\n    if (!allowedRoles.includes(userRole)) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  } catch (err) {\n    console.error('Invalid token:', err);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","allowedRoles","token","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","decoded","userRole","role","includes","err","console","error","_c","$RefreshReg$"],"sources":["C:/Users/omyel/Desktop/RentApp/client/src/auth/ProtectedRoute.jsx"],"sourcesContent":["// src/auth/ProtectedRoute.jsx\r\nimport React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst ProtectedRoute = ({ allowedRoles }) => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) return <Navigate to=\"/\" />;\r\n\r\n    try {\r\n        const decoded = jwtDecode(token);\r\n        const userRole = decoded.role;\r\n\r\n        if (!allowedRoles.includes(userRole)) {\r\n            return <Navigate to=\"/\" />;\r\n        }\r\n\r\n        return <Outlet />;\r\n    } catch (err) {\r\n        console.error('Invalid token:', err);\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EACzC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE,oBAAOH,OAAA,CAACJ,QAAQ;IAACU,EAAE,EAAC;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEtC,IAAI;IACA,MAAMC,OAAO,GAAGb,SAAS,CAACK,KAAK,CAAC;IAChC,MAAMS,QAAQ,GAAGD,OAAO,CAACE,IAAI;IAE7B,IAAI,CAACX,YAAY,CAACY,QAAQ,CAACF,QAAQ,CAAC,EAAE;MAClC,oBAAOZ,OAAA,CAACJ,QAAQ;QAACU,EAAE,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC9B;IAEA,oBAAOV,OAAA,CAACH,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;IACpC,oBAAOf,OAAA,CAACJ,QAAQ;MAACU,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;AACJ,CAAC;AAACQ,EAAA,GAlBIjB,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}